rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /posts/{postId} {
      // כל משתמש מחובר יכול לקרוא פוסטים
      allow read: if request.auth != null;
      
      // רק בעל הפוסט יכול למחוק אותו או לערוך את התוכן העיקרי שלו
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // בדיקה האם הבקשה מעדכנת רק שדה מוגדרים (לייקים או שמירות)
      function isLikeOrSaveUpdate() {
        let affectedKeys = request.resource.data.diff(resource.data).affectedKeys();
        return affectedKeys.hasOnly(['likedBy', 'likes', 'savedBy']) 
          || affectedKeys.hasOnly(['comments']);
      }
      
      // אפשור עדכון אם זה משתמש מחובר, וזה או בעל הפוסט או עדכון של לייקים/שמירות בלבד
      allow update: if request.auth != null &&
        (resource.data.userId == request.auth.uid || isLikeOrSaveUpdate());
      
      // רק משתמש מחובר יכול ליצור פוסט, והוא חייב להיות בעל הפוסט
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // חוקים לאוסף users
    match /users/{userId} {
      // משתמש יכול לקרוא ולעדכן רק את הפרופיל שלו
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // חוקים לאוסף notifications בתוך users
      match /notifications/{notificationId} {
        // משתמש יכול לקרוא, ליצור ולעדכן התראות שלו
        allow read, write: if request.auth != null && userId == request.auth.uid;
        
        // מאפשר לכל משתמש מחובר ליצור התראות אצל משתמשים אחרים
        allow create: if request.auth != null;
      }
    }
  }
} 